version: '2.2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: es01
    environment:
      - discovery.type=single-node
      #- node.name=es01
      #- cluster.name=es-docker-cluster
      #- bootstrap.memory_lock=true
      #- "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  #es02:
  #  image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
  #  container_name: es02
  #  environment:
  #    - node.name=es02
  #    - cluster.name=es-docker-cluster
  #    - discovery.seed_hosts=es01,es03
  #    - cluster.initial_master_nodes=es01,es02,es03
  #    - bootstrap.memory_lock=true
  #    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  volumes:
  #    - ./data02:/usr/share/elasticsearch/data
  #  networks:
  #    - elastic
  #es03:
  #  image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
  #  container_name: es03
  #  environment:
  #    - node.name=es03
  #    - cluster.name=es-docker-cluster
  #    - discovery.seed_hosts=es01,es02
  #    - cluster.initial_master_nodes=es01,es02,es03
  #    - bootstrap.memory_lock=true
  #    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  volumes:
  #    - ./data03:/usr/share/elasticsearch/data
  #  networks:
  #    - elastic

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.2
    environment:
      - SERVER_NAME=kibana.local
      - ELASTICSEARCH_HOSTS=http://es01:9200
      #- ELASTICSEARCH_HOSTS='["http://es01:9200","http://es02:9200","http://es03:9200"]'
      - ELASTICSEARCH_USERNAME=kibana
      - ELASTICSEARCH_PASSWORD=Jjq32CVQTZXSIY1vEy9A
    #volumes:
    #  - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    depends_on:
      - es01
    networks:
      - elastic

volumes:
  data01:
    driver: local
#  data02:
#    driver: local
#  data03:
#    driver: local

networks:
  elastic:
    driver: bridge